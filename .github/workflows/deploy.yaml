name:  Test and Deploy

on:
  push:
    branches: [ master ]


jobs:
  find-k8s-files:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ env.files }}
    steps:
      - name: Get k8s files
        uses: actions/checkout@v2
        id: files
      - run: |
              FILES="$(ls -d ./k8s/* | jq -R -s -c 'split("\n")[:-1]')"
              echo "files=`echo -n $FILES`" >> $GITHUB_ENV
              
  test-files:
    needs: find-k8s-files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s-files: ${{fromJson(needs.find-k8s-files.outputs.files)}}
      fail-fast: false
    steps:
    - uses: actions/checkout@v2 
    - name: Test files with kubeval
      uses: instrumenta/kubeval-action@master
      with: 
       files: ${{matrix.k8s-files}}
       
  deploy:
    name: Build image
    runs-on: [ubuntu-latest]

    steps:
    - name: Check out code
      uses: actions/checkout@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Log in to Docker Hub
      run: docker login jfrog.it-academy.by -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Build, tag, and push image to JFrog
      env:
        JFROG_REGISTRY: jfrog.it-academy.by
        JFROG_REPOSITORY: public/denisareshkevich-project
        IMAGE_TAG: ${{ github.sha }}
      run: |
        ls -la
        docker build -t $JFROG_REGISTRY/$JFROG_REPOSITORY:$IMAGE_TAG -t $JFROG_REGISTRY/$JFROG_REPOSITORY:latest .
        docker push -a $JFROG_REGISTRY/$JFROG_REPOSITORY
